<?php

namespace Proxies\__CG__\Pes\FrontBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Joueur extends \Pes\FrontBundle\Entity\Joueur implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setPseudo($pseudo)
    {
        $this->__load();
        return parent::setPseudo($pseudo);
    }

    public function getPseudo()
    {
        $this->__load();
        return parent::getPseudo();
    }

    public function setEquipe(\Pes\FrontBundle\Entity\Equipe $equipe)
    {
        $this->__load();
        return parent::setEquipe($equipe);
    }

    public function getEquipe()
    {
        $this->__load();
        return parent::getEquipe();
    }

    public function setPays(\Pes\FrontBundle\Entity\Pays $pays)
    {
        $this->__load();
        return parent::setPays($pays);
    }

    public function getPays()
    {
        $this->__load();
        return parent::getPays();
    }

    public function addCompetition(\Pes\FrontBundle\Entity\Competition $competitions)
    {
        $this->__load();
        return parent::addCompetition($competitions);
    }

    public function removeCompetition(\Pes\FrontBundle\Entity\Competition $competitions)
    {
        $this->__load();
        return parent::removeCompetition($competitions);
    }

    public function getCompetitions()
    {
        $this->__load();
        return parent::getCompetitions();
    }

    public function addJeux(\Pes\FrontBundle\Entity\Jeu $jeux)
    {
        $this->__load();
        return parent::addJeux($jeux);
    }

    public function removeJeux(\Pes\FrontBundle\Entity\Jeu $jeux)
    {
        $this->__load();
        return parent::removeJeux($jeux);
    }

    public function getJeux()
    {
        $this->__load();
        return parent::getJeux();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'pseudo', 'equipe', 'pays', 'competitions', 'jeux');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}